
## Install nginx
packages:
  yum:
    nginx: []
    curl: []
    gcc: []

files:
  ## Setup crons
  "/home/ec2-user/clipr_cron":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Renew SSL certificates the first day of every month, if 30 days from expiration
      0 2 1 * * /usr/local/bin/certbot-auto renew --pre-hook "service nginx stop" --post-hook "service nginx start"

## Stop apache, add nginx / php-fpm boot up and environment config
commands:

  # Stop apache completely
  011_httpd_conf:
    test: /sbin/service httpd status | grep running
    command: /sbin/service httpd stop

  # Reboot nginx when instance is restarting
  020_nginx_boot:
    command: chkconfig nginx on

## Script that will be executed AFTER the application is installed and BEFORE the deployment of instance
container_commands:

  # Make all .sh scripts executable
  001_sh_executable:
    command: find .ebextensions/* -type f -iname "*.sh" -exec chmod +x {} \;

  # Copy all custom platform scripts and config files
  002_hooks:
    command: cp -rf .ebextensions/setup/hooks/* /opt/elasticbeanstalk/hooks/

  # Configure SSL certificate if not already done
  #008_conf_SSL:
    # Set a temporary nginx conf file (the default one won't work at first install, because ssl cert is not existing yet
    # Then check if certbot and SSL cert exist
    #command: sh .ebextensions/setup/certbot/setup.sh

  # Our custom nginx conf
  010_nginx_conf:
    # command: sh .ebextensions/setup/conf/nginx/load_conf.sh
    command: cp -f .ebextensions/setup/conf/nginx/nginx.conf /etc/nginx/nginx.conf

  # Where we store env variables
  011_nginx_env_touch:
    command: touch /etc/nginx/fastcgi_params_env

  # Restart nginx
  012_nginx_restart:
    command: /sbin/service nginx restart

  # App is now built by Gitlab runner, so we don't need the following lines until we need to run a node server from AWS

  # Install node js
  #020_node_install:
  #  command: "sh .ebextensions/setup/npm/install.sh"

  # Install dependencies
  #030_install_dependencies:
  #  command: "export HOME=/home/ec2-user && npm install npm-install-peers --silent --save"

  # Install app
 # 040_install_app:
  #  command: "npm config set scripts-prepend-node-path true && REACT_APP_STAGE=staging CI=true npm run build"
